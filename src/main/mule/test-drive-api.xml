<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">
    <http:listener-config name="test-drive-api-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="test-drive-api-config" api="test-drive-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <salesforce:sfdc-config name="Salesforce_Config" doc:name="Salesforce Config" doc:id="dee59c3e-652a-41d5-afec-49fac73f0c97" >
		<salesforce:basic-connection username="${user}" password="${password}" securityToken="${token}" url="${URL}" />
	</salesforce:sfdc-config>
	<configuration-properties doc:name="Configuration properties" doc:id="069c53c8-5f06-4b67-9b9a-de116230c2eb" file="Config.properties" />
	<flow name="test-drive-api-main">
        <http:listener config-ref="test-drive-api-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="test-drive-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="test-drive-api-console">
        <http:listener config-ref="test-drive-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="test-drive-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="post:\leadDetails:application\json:test-drive-api-config">
		<set-variable value="#[payload]" doc:name="Original payload" doc:id="9d4beca7-c886-4900-b76a-c51efd32ac48" variableName="OriginalPayload"/>
		<salesforce:query doc:name="Query" doc:id="2758de71-91ec-4379-9027-cdbb2c50108f" config-ref="Salesforce_Config">
			<salesforce:salesforce-query ><![CDATA[select id,PersonEmail from Account where RecordType.DeveloperName = 'PersonAccount' and FirstName = ':firstName' and LastName = ':lastName' and Phone = ':phone']]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	firstName : vars.OriginalPayload.firstName,
	lastName : vars.OriginalPayload.lastName,
	phone : vars.OriginalPayload.phone
}]]]></salesforce:parameters>
		</salesforce:query>
		<choice doc:name="Choice" doc:id="00d6b1a9-f0c3-40ea-860c-ae313a7555ef" >
			<when expression="#[payload == []]">
				<ee:transform doc:name="Transform Message" doc:id="09fa7ca7-9b62-44dd-92a4-c22705ea9d34" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[{
	LastName: vars.OriginalPayload.lastName,
	FirstName: vars.OriginalPayload.firstName,
	Phone: vars.OriginalPayload.phone as String,
	PersonEmail: vars.OriginalPayload.email
}]]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<salesforce:create doc:name="Create" doc:id="40c25a8e-2ac7-471d-b579-67b7390c91a6" config-ref="Salesforce_Config" type="Account"/>
				<set-variable value="#[payload.items.id]" doc:name="Set Variable" doc:id="9052dd35-c2ab-4d70-9f54-0820e49f8a31" variableName="NewId"/>
				<ee:transform doc:name="Transform Message" doc:id="2f9b339a-2b93-47cc-be9a-0eee7b2ec688">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="69bf10ac-5972-4190-b0ff-3bc24165ba42" message="#[payload]"/>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="06b57d7c-4382-4315-9aaa-8f2a9021e04b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map (item,index) ->{
	Id: item.Id,
	PersonEmail: vars.OriginalPayload.email
}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<salesforce:update doc:name="Update" doc:id="2da585a5-7f2f-4608-aad1-f9879d3a810f" config-ref="Salesforce_Config" type="Account"/>
				<set-variable value="#[payload.items.id]" doc:name="Set Variable" doc:id="6dca50a1-eff6-4c70-9da8-4bbd450a3b5f" variableName="UpdateId"/>
				<ee:transform doc:name="Transform Message" doc:id="9a4fcd8c-b8f2-427a-9534-76ab25868983">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="40ff5ac7-cfad-4f98-976e-a612436a8731" message="#[payload]"/>
			</otherwise>
		</choice>
    </flow>
</mule>
